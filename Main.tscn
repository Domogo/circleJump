[gd_scene load_steps=6 format=2]

[ext_resource path="res://UI/Screens.tscn" type="PackedScene" id=1]
[ext_resource path="res://UI/HUD.tscn" type="PackedScene" id=2]
[ext_resource path="res://assets/audio/Music_Light-Puzzles.ogg" type="AudioStream" id=3]
[ext_resource path="res://UI/Background.tscn" type="PackedScene" id=4]

[sub_resource type="GDScript" id=1]
script/source = "extends Node

var Circle = preload(\"res://objects/Circle.tscn\")
var Jumper = preload(\"res://objects/Jumper.tscn\")

var player
var score = 0 setget set_score
var highscore = 0
var new_highscore = false
var level = 0
var num_circles = 0
var bonus = 0 setget set_bonus

func _ready():
	randomize()
	load_score()
	$HUD.hide()

func new_game():
	# set_score == self.score
	# set_score(0)
	self.score = 0
	self.bonus = 0
	level = 0
	num_circles = 0
	new_highscore = false
	$HUD.update_score(score)
	$Camera2D.position = $StartPosition.position
	player = Jumper.instance()
	player.position = $StartPosition.position
	add_child(player)
	player.connect(\"captured\", self, \"_on_Jumper_captured\")
	player.connect(\"died\", self, \"_on_Jumper_died\")
	spawn_circle($StartPosition.position)
	$HUD.show()
	$HUD.show_message(\"Go!\")
	if settings.enable_music:
		$Music.play()

func spawn_circle(_position=null):
	var c = Circle.instance()
	if !_position:
		var x = rand_range(-150, 150)
		var y = rand_range(-500, -400)
		_position = player.target.position + Vector2(x, y)
	add_child(c)
	c.connect(\"full_orbit\", self, \"set_bonus\", [1])
	c.init(_position, level)

func _on_Jumper_captured(object):
	$Camera2D.position = object.position
	object.capture(player)
	call_deferred(\"spawn_circle\")
	self.score += 1 * bonus
	self.bonus += 1
	num_circles += 1
	if num_circles > 0 and num_circles % settings.circles_per_level == 0:
		level += 1
		$HUD.show_message(\"Level %s\" % str(level))

func set_score(value):
	score = value
	if score > highscore and !new_highscore:
		$HUD.show_message(\"New records!\")
		new_highscore = true
	$HUD.update_score(score)

func _on_Jumper_died():
	if score > highscore:
		highscore = score
		save_score()
	get_tree().call_group(\"circles\", \"implode\")
	$Screens.game_over(score, highscore)
	$HUD.hide()
	if settings.enable_music:
		$Music.stop()

func load_score():
	var f = File.new()
	if f.file_exists(settings.score_file):
		f.open(settings.score_file, File.READ)
		highscore = f.get_var()
		f.close()

func save_score():
	var f = File.new()
	f.open(settings.score_file, File.WRITE)
	f.store_var(highscore)
	f.close()

func set_bonus(value):
	bonus = value
	$HUD.update_bonus(bonus)
"

[node name="Main" type="Node"]
script = SubResource( 1 )

[node name="StartPosition" type="Position2D" parent="."]
position = Vector2( 236.529, 786.855 )

[node name="Camera2D" type="Camera2D" parent="."]
position = Vector2( 236.774, 789.247 )
offset = Vector2( 0, -200 )
current = true
smoothing_enabled = true
smoothing_speed = 8.0

[node name="Screens" parent="." instance=ExtResource( 1 )]

[node name="HUD" parent="." instance=ExtResource( 2 )]

[node name="Music" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 3 )

[node name="Background" parent="." instance=ExtResource( 4 )]
[connection signal="start_game" from="Screens" to="." method="new_game"]
